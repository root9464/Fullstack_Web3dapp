# Используем конкретную версию Golang для лучшей предсказуемости
FROM golang:1.23-alpine AS builder

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем только необходимые файлы для скачивания зависимостей
COPY go.mod go.sum ./
RUN go mod download

# Копируем все файлы проекта
COPY . .

# Оптимизируем сборку, чтобы исключить ненужные зависимости и уменьшить размер образа
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

# Создаем минимальный контейнер для запуска приложения
FROM alpine:latest

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем скомпилированный бинарный файл из предыдущего этапа
COPY --from=builder /app/main .
COPY .env .
# Указываем порт, который будет использовать приложение
EXPOSE 8080

# Определяем команду запуска контейнера
#CMD ["./main"]
